openapi: 3.0.0
info:
  title: NeoConcept API
servers:
  - url: /api/v1
    description: Development server

tags:
  - name: Auth
  - name: Courses
  - name: Posts

paths:
  /auth/signup:
    post:
      tags:
        - Auth
      summary: create a new user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                  example: test
                email:
                  type: string
                  format: email
                  example: test@test.com
                password:
                  type: string
                  example: test
                role:
                  type: string
                  enum: [STUDENT, INSTRUCTOR, ADMIN]
      responses:
        "201":
          description: Please confirm your email
        "500":
          description: Something went wrong
  /auth/login:
    post:
      tags:
        - Auth
      summary: login a user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  format: email
                  example: test@test.com
                password:
                  type: string
                  example: test
      responses:
        "200":
          description: success
        "400":
          description: Please provide email and password || Invalid credentials
        "403":
          description: Please confirm your email first
        "500":
          description: Something went wrong
  /auth/logout:
    get:
      tags:
        - Auth
      summary: logout a user
      responses:
        "200":
          description: success
  /auth/authorize:
    get:
      tags:
        - Auth
      summary: check if the user is logged in
      responses:
        "200":
          description: success
        "401":
          description: You are not logged in
  /auth/resend-confirmation-email:
    post:
      tags:
        - Auth
      summary: resend a confirmation email
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  format: email
                  example: test@test.com
      responses:
        "201":
          description: success
        "400":
          description: Email is required || Email already confirmed
        "404":
          description: User not found
        "500":
          description: Something went wrong
  /auth/google:
    get:
      tags:
        - Auth
      summary: redirect to Google for authentication
      description: >
        Redirects the user to Google's OAuth2 consent screen.
        This endpoint cannot be executed directly in Swagger UI
        because it performs an external redirect.
      parameters:
        - name: instructor
          in: query
          schema:
            type: boolean
            example: false
      responses:
        "302":
          description: Redirect to Google's consent screen
  /auth/forgot-password:
    post:
      tags:
        - Auth
      summary: send a reset password email in case you forgot the password
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  format: email
                  example: test@test.com
      responses:
        "201":
          description: Password reset email was sent successfully
        "404":
          description: User not found
        "500":
          description: Something went wrong
  /auth/verify-otp:
    post:
      tags:
        - Auth
      summary: verify the otp sent to email for password reset
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                otp:
                  type: string
                email:
                  type: string
                  format: email
                  example: test@test.com
      responses:
        "200":
          description: OTP verified successfully
        "400":
          description: Provide the OTP || Provide the email || Invalid OTP || OTP has expired
        "404":
          description: User not found
        "500":
          description: Something went wrong
  /auth/reset-password/{otp}:
    patch:
      tags:
        - Auth
      summary: create a new password
      parameters:
        - name: otp
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  format: email
                  example: test@test.com
                newPassword:
                  type: string
                  example: newPassword
      responses:
        "200":
          description: Password was reset successfully
        "400":
          description: Provide the email || Provide a new password || Invalid OTP || OTP has expired
        "404":
          description: User not found
        "500":
          description: Something went wrong

  /courses:
    get:
      tags:
        - Courses
      summary: retrieve all courses
      parameters:
        - name: search
          in: query
          schema:
            type: string
      responses:
        "200":
          description: success
        "500":
          description: Something went wrong
  /courses/{id}:
    get:
      tags:
        - Courses
      summary: retrieve a course by id
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            example: 1
      responses:
        "200":
          description: success
        "404":
          description: Room not found
        "500":
          description: Something went wrong
  /courses/create:
    post:
      tags:
        - Courses
      summary: create a new course
      security:
        - cookieAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  example: test course
                descrition:
                  type: string
                  example: test description
              required:
                - name
      responses:
        "201":
          description: success
        "400":
          description: course name is required || Duplicate course name. Please choose another.
        "500":
          description: Something went wrong
  /courses/{id}/update:
    patch:
      tags:
        - Courses
      summary: update the info of a course
      security:
        - cookieAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            example: 1
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  example: new test course
                descrition:
                  type: string
                  example: new test description
      responses:
        "200":
          description: success
        "400":
          description: Duplicate course name. Please choose another.
        "404":
          description: Room not found
        "500":
          description: Something went wrong
  /courses/{id}/delete:
    delete:
      tags:
        - Courses
      summary: delete a course
      security:
        - cookieAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            example: 1
      responses:
        "200":
          description: Room deleted successfully
        "404":
          description: Room not found
        "500":
          description: Something went wrong

  /courses/{courseId}/posts:
    get:
      tags:
        - Posts
      summary: retrieve all the posts in a course
      security:
        - cookieAuth: []
      parameters:
        - name: search
          in: query
          schema:
            type: string
        - name: courseId
          in: path
          required: true
          schema:
            type: integer
            example: 1
      responses:
        "200":
          description: success
        "500":
          description: Something went wrong
  /courses/{courseId}/posts/{id}:
    get:
      tags:
        - Posts
      summary: retrieve a post by id in a course
      security:
        - cookieAuth: []
      parameters:
        - name: courseId
          in: path
          required: true
          schema:
            type: integer
            example: 1
        - name: id
          in: path
          required: true
          schema:
            type: integer
            example: 1
      responses:
        "200":
          description: success
        "404":
          description: Post not found
        "500":
          description: Something went wrong
  /courses/{courseId}/posts/create:
    post:
      tags:
        - Posts
      summary: create a new post in a course
      security:
        - cookieAuth: []
      parameters:
        - name: courseId
          in: path
          required: true
          schema:
            type: integer
            example: 1
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                  example: test post
                content:
                  type: string
                  example: test content
      responses:
        "201":
          description: success
        "500":
          description: Something went wrong
  /courses/{courseId}/posts/{id}/update:
    patch:
      tags:
        - Posts
      summary: update the info of a post in a course
      security:
        - cookieAuth: []
      parameters:
        - name: courseId
          in: path
          required: true
          schema:
            type: integer
            example: 1
        - name: id
          in: path
          required: true
          schema:
            type: integer
            example: 1
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                  example: new test post
                content:
                  type: string
                  example: new test description
      responses:
        "200":
          description: success
        "404":
          description: Post not found
        "500":
          description: Something went wrong
  /courses/{courseId}/posts/{id}/delete:
    delete:
      tags:
        - Posts
      summary: delete a post in a course
      security:
        - cookieAuth: []
      parameters:
        - name: courseId
          in: path
          required: true
          schema:
            type: integer
            example: 1
        - name: id
          in: path
          required: true
          schema:
            type: integer
            example: 1
      responses:
        "200":
          description: Post deleted successfully
        "404":
          description: Post not found
        "500":
          description: Something went wrong
