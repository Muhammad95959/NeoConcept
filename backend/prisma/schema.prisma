// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id                   Int           @id @default(autoincrement())
  createdAt            DateTime      @default(now())
  email                String        @unique
  username             String
  password             String?
  googleId             String?       @unique
  role                 Role
  emailConfirmed       Boolean       @default(false)
  confirmEmailToken    String?
  confirmEmailExpires  DateTime?
  resetPasswordOTP     String?
  resetPasswordToken   String?
  resetPasswordExpires DateTime?
  passwordChangedAt    DateTime?
  deleted              Boolean       @default(false)
  subjectRooms         SubjectRoom[]
  memberShips          MemberShip[]
  Resources            Resource[]
  Post                 Post[]
}

model SubjectRoom {
  id          Int          @id @default(autoincrement())
  name        String
  description String?
  createdAt   DateTime     @default(now())
  createdBy   Int
  creator     User         @relation(fields: [createdBy], references: [id])
  memberShips MemberShip[]
  Resources   Resource[]
  Post        Post[]
}

model MemberShip {
  id            Int         @id @default(autoincrement())
  userId        Int
  subjectId     Int
  roleInSubject Role
  joinedAt      DateTime    @default(now())
  user          User        @relation(fields: [userId], references: [id])
  subject       SubjectRoom @relation(fields: [subjectId], references: [id])
}

model Resource {
  id         Int         @id @default(autoincrement())
  uploadedBy Int
  subjectId  Int
  uploadedAt DateTime    @default(now())
  fileName   String
  fileType   String
  fileUrl    String
  user       User        @relation(fields: [uploadedBy], references: [id])
  subject    SubjectRoom @relation(fields: [subjectId], references: [id])
}

model Post {
  id         Int         @id @default(autoincrement())
  uploadedBy Int
  subjectId  Int
  title      String
  content    String
  createdAt  DateTime    @default(now())
  user       User        @relation(fields: [uploadedBy], references: [id])
  subject    SubjectRoom @relation(fields: [subjectId], references: [id])
}

enum Role {
  ADMIN
  INSTRUCTOR
  STUDENT
}
